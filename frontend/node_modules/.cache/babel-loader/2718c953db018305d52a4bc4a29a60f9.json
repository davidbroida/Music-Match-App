{"ast":null,"code":"var _jsxFileName = \"/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Playlist from './Playlist';\nimport NewReleases from './NewReleases';\nimport { Container } from 'react-bootstrap';\nimport Player from './Player';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01'\n});\n\nfunction Dashboard() {\n  _s();\n\n  // const accessToken = useAuth(code);\n  const code = localStorage.getItem('code');\n  const accessToken = useAuth(code);\n  const [playlists, setPlaylists] = useState([]);\n  const [playingSong, setPlayingSong] = useState();\n  const [newReleases, setNewReleases] = useState([]);\n  localStorage.getItem('code');\n\n  function choosePlaylist(playlist) {\n    setPlayingSong(playlist);\n  }\n\n  function chooseNewRelease(album) {\n    setPlayingSong(album);\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.getNewReleases({\n      limit: 13,\n      offset: 0,\n      country: 'US'\n    }).then(res => {\n      console.log(res.body);\n      setNewReleases(res.body.albums.items.map(album => {\n        return {\n          name: album.name,\n          uri: album.uri,\n          albumUrl: album.images[0].url\n        };\n      }));\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.getPlaylistsForCategory('party', {\n      country: 'US',\n      limit: 10,\n      offset: 0\n    }).then(res => {\n      console.log(res.body);\n      setPlaylists(res.body.playlists.items.map(playlist => {\n        return {\n          name: playlist.name,\n          description: playlist.description,\n          uri: playlist.uri,\n          albumUrl: playlist.images[0].url\n        };\n      }));\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-row\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"flex-row\",\n        children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n          playlist: playlist,\n          choosePlaylist: choosePlaylist\n        }, playlist.uri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"flex-row\",\n        children: newReleases.map(album => /*#__PURE__*/_jsxDEV(NewReleases, {\n          album: album,\n          chooseNewRelease: chooseNewRelease\n        }, album.uri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-player\",\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingSong === null || playingSong === void 0 ? void 0 : playingSong.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"search-btn\",\n        className: \"btn btn-success btn-lg\",\n        href: \"/search\",\n        children: \"Search Songs & Lyrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"F8GQLGdoxzanQVMskq6sU8fkhD8=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/Dashboard.js"],"names":["React","useState","useEffect","useAuth","SpotifyWebApi","Playlist","NewReleases","Container","Player","Link","SpotifyApi","clientId","Dashboard","code","localStorage","getItem","accessToken","playlists","setPlaylists","playingSong","setPlayingSong","newReleases","setNewReleases","choosePlaylist","playlist","chooseNewRelease","album","setAccessToken","getNewReleases","limit","offset","country","then","res","console","log","body","albums","items","map","name","uri","albumUrl","images","url","err","getPlaylistsForCategory","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Playlist from './Playlist';\nimport NewReleases from './NewReleases';\nimport { Container } from 'react-bootstrap';\nimport Player from './Player';\n\nimport { Link } from 'react-router-dom';\n\n\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01',\n})\n\nfunction Dashboard() {\n  // const accessToken = useAuth(code);\n  const code = localStorage.getItem('code');\n  const accessToken = useAuth(code);\n  const [playlists, setPlaylists] = useState([]);\n  const [playingSong, setPlayingSong] = useState();\n  const [newReleases, setNewReleases] = useState([]);\n\n  localStorage.getItem('code')\n\n  function choosePlaylist(playlist) {\n    setPlayingSong(playlist);\n  }\n  function chooseNewRelease(album) {\n    setPlayingSong(album);\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken)\n  }, [accessToken]);\n\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.getNewReleases({ limit: 13, offset: 0, country: 'US' })\n      .then(res => {\n        console.log(res.body)\n        setNewReleases(res.body.albums.items.map(album => {\n          return {\n            name: album.name,\n            uri: album.uri,\n            albumUrl: album.images[0].url\n          }\n        }))\n      }, function (err) {\n        console.log(\"Something went wrong!\", err);\n      });\n  }, [accessToken]);\n\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.getPlaylistsForCategory('party', {\n      country: 'US',\n      limit: 10,\n      offset: 0\n    })\n      .then(res => {\n        console.log(res.body)\n        setPlaylists(res.body.playlists.items.map(playlist => {\n\n          return {\n            name: playlist.name,\n            description: playlist.description,\n            uri: playlist.uri,\n            albumUrl: playlist.images[0].url\n          }\n        }))\n      }, function (err) {\n        console.log(\"Something went wrong!\", err);\n      });\n  }, [accessToken]);\n\n  return (\n    <> <div className=\"top-row\">\n      <Container className=\"flex-row\"   >\n        {playlists.map(playlist => (\n          <Playlist playlist={playlist} key={playlist.uri} choosePlaylist={choosePlaylist} />\n        ))}\n      </Container>\n    </div>\n      <div>\n        <Container className=\"flex-row\"  >\n          {newReleases.map(album => (\n            <NewReleases album={album} key={album.uri} chooseNewRelease={chooseNewRelease} />\n          ))}\n        </Container >\n      </div>\n      <div className=\"music-player\">\n        <Player accessToken={accessToken} trackUri={playingSong?.uri} />\n      </div>\n      <div>\n        <a id=\"search-btn\" className=\"btn btn-success btn-lg\" href=\"/search\">Search Songs & Lyrics</a>\n      </div>\n    </>\n  )\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}