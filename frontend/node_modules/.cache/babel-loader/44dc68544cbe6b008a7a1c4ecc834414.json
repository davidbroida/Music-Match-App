{"ast":null,"code":"var _jsxFileName = \"/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Playlist from './Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01'\n});\n\nfunction Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [playlists, setPlaylists] = useState([]); // const [loading, setLoading] = useState(true);\n  // console.log('playlists:', playlists);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken);\n  }, [accessToken]); // console.log(accessToken);\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   SpotifyApi.getPlaylistsForCategory('party', {\n  //     country: 'BR',\n  //     limit: 10,\n  //     offset: 0\n  //   })\n  //     .then(function (data) {\n  //       let output = data.body.playlists.items.map(item => item.images[0].url);\n  //       setPlaylists(output);\n  //       // console.log(output);\n  //       // let output = data\n  //       // console.log(output);\n  //     }, function (err) {\n  //       console.log(\"Something went wrong!\", err);\n  //     });\n  // }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.getPlaylistsForCategory('party', {\n      country: 'BR',\n      limit: 10,\n      offset: 0\n    }).then(res => {\n      console.log(res.body);\n      setPlaylists(res.body.playlists.items.map(playlist => {\n        const smallestPlaylistImage = playlist.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, playlist.items.images[0]);\n        return {};\n      }));\n      console.log(res.body);\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n  }, [accessToken]);\n\n  if (!playlists) {\n    return 'loading playlists...';\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Playlist Page Loaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Dashboard, \"7zJmTZZqALEQ3MRMUA19UAc6DgA=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/Dashboard.js"],"names":["React","useState","useEffect","useAuth","SpotifyWebApi","Playlist","SpotifyApi","clientId","Dashboard","code","accessToken","playlists","setPlaylists","setAccessToken","getPlaylistsForCategory","country","limit","offset","then","res","console","log","body","items","map","playlist","smallestPlaylistImage","images","reduce","smallest","image","height","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,UAAU,GAAG,IAAIF,aAAJ,CAAkB;AACnCG,EAAAA,QAAQ,EAAE;AADyB,CAAlB,CAAnB;;AAKA,SAASC,SAAT,OAA6B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC3B,QAAMC,WAAW,GAAGP,OAAO,CAACM,IAAD,CAA3B;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAF2B,CAI3B;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,WAAL,EAAkB;AAClBJ,IAAAA,UAAU,CAACO,cAAX,CAA0BH,WAA1B;AACD,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT,CAP2B,CAY3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,WAAL,EAAkB;AAClBJ,IAAAA,UAAU,CAACQ,uBAAX,CAAmC,OAAnC,EAA4C;AAC1CC,MAAAA,OAAO,EAAE,IADiC;AAE1CC,MAAAA,KAAK,EAAE,EAFmC;AAG1CC,MAAAA,MAAM,EAAE;AAHkC,KAA5C,EAKGC,IALH,CAKQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAV,MAAAA,YAAY,CAACO,GAAG,CAACG,IAAJ,CAASX,SAAT,CAAmBY,KAAnB,CAAyBC,GAAzB,CAA6BC,QAAQ,IAAI;AACpD,cAAMC,qBAAqB,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,MAAhB,CAAuB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACxE,cAAIA,KAAK,CAACC,MAAN,GAAeF,QAAQ,CAACE,MAA5B,EAAoC,OAAOD,KAAP;AACpC,iBAAOD,QAAP;AACD,SAH6B,EAG3BJ,QAAQ,CAACF,KAAT,CAAeI,MAAf,CAAsB,CAAtB,CAH2B,CAA9B;AAIA,eAAO,EAAP;AAGD,OARY,CAAD,CAAZ;AASAP,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,KAjBH,EAiBK,UAAUU,GAAV,EAAe;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCW,GAArC;AACD,KAnBH;AAoBD,GAtBQ,EAsBN,CAACtB,WAAD,CAtBM,CAAT;;AAwBA,MAAI,CAACC,SAAL,EAAgB;AACd,WAAO,sBAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;AAGF;;GAvEQH,S;UACaL,O;;;KADbK,S;AAyET,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Playlist from './Playlist';\n\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01',\n})\n\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [playlists, setPlaylists] = useState([]);\n\n  // const [loading, setLoading] = useState(true);\n  // console.log('playlists:', playlists);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken)\n  }, [accessToken]);\n\n  // console.log(accessToken);\n\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   SpotifyApi.getPlaylistsForCategory('party', {\n  //     country: 'BR',\n  //     limit: 10,\n  //     offset: 0\n  //   })\n  //     .then(function (data) {\n  //       let output = data.body.playlists.items.map(item => item.images[0].url);\n  //       setPlaylists(output);\n  //       // console.log(output);\n  //       // let output = data\n  //       // console.log(output);\n\n  //     }, function (err) {\n  //       console.log(\"Something went wrong!\", err);\n  //     });\n  // }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.getPlaylistsForCategory('party', {\n      country: 'BR',\n      limit: 10,\n      offset: 0\n    })\n      .then(res => {\n        console.log(res.body)\n        setPlaylists(res.body.playlists.items.map(playlist => {\n          const smallestPlaylistImage = playlist.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image\n            return smallest\n          }, playlist.items.images[0])\n          return {\n\n          }\n        }))\n        console.log(res.body);\n      }, function (err) {\n        console.log(\"Something went wrong!\", err);\n      });\n  }, [accessToken]);\n\n  if (!playlists) {\n    return 'loading playlists...'\n  } else {\n    return (\n      <div>\n        <h1>Playlist Page Loaded</h1>\n        <div>\n\n        </div>\n      </div>\n    )\n  }\n\n\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}