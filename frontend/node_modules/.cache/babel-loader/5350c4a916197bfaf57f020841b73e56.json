{"ast":null,"code":"var _jsxFileName = \"/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Song from './Song';\nimport Player from './Player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01'\n});\n\nfunction Homepage(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingSong, setPlayingSong] = useState();\n  console.log(searchResults);\n\n  function chooseSong(song) {\n    setPlayingSong(song);\n    setSearch('');\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    SpotifyApi.searchTracks(search).then(res => {\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search songs...\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(song => /*#__PURE__*/_jsxDEV(Song, {\n        song: song,\n        chooseSong: chooseSong\n      }, song.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingSong === null || playingSong === void 0 ? void 0 : playingSong.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"g/rlyLKiioxftTffMDhpkz3NEYc=\", false, function () {\n  return [useAuth];\n});\n\n_c = Homepage;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/Homepage.js"],"names":["React","useState","useEffect","useAuth","Container","Form","SpotifyWebApi","Song","Player","SpotifyApi","clientId","Homepage","code","accessToken","search","setSearch","searchResults","setSearchResults","playingSong","setPlayingSong","console","log","chooseSong","song","setAccessToken","searchTracks","then","res","body","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","e","target","value","overflowY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Song from './Song';\nimport Player from './Player';\n\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01',\n})\n\nfunction Homepage({ code }) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingSong, setPlayingSong] = useState();\n  console.log(searchResults);\n\n  function chooseSong(song) {\n    setPlayingSong(song);\n    setSearch('');\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken)\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!search) return setSearchResults([])\n    if (!accessToken) return;\n\n    SpotifyApi.searchTracks(search).then(res => {\n\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image\n          return smallest\n        }, track.album.images[0])\n\n\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        }\n      }))\n    })\n  }, [search, accessToken])\n\n  return (\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }} >\n      <Form.Control type=\"search\" placeholder=\"Search songs...\" value={search} onChange={e => setSearch(e.target.value)} />\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n        {searchResults.map(song => (\n          < Song song={song} key={song.uri} chooseSong={chooseSong} />\n        ))}\n      </div>\n      <div>\n        <Player accessToken={accessToken} trackUri={playingSong?.uri} />\n      </div>\n    </Container >\n  )\n}\n\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}