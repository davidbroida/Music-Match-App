{"ast":null,"code":"import _slicedToArray from\"/Users/davidbroida/Desktop/MusicMatch2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import SpotifyPlayer from\"react-spotify-web-playback\";import{jsx as _jsx}from\"react/jsx-runtime\";function Player(_ref){var accessToken=_ref.accessToken,trackUri=_ref.trackUri;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),play=_useState2[0],setPlay=_useState2[1];useEffect(function(){return setPlay(true);},[trackUri]);if(!accessToken)return null;return/*#__PURE__*/_jsx(SpotifyPlayer,{token:accessToken,showSaveIcon:true,callback:function callback(state){if(!state.isPlaying)setPlay(false);},play:play,uris:trackUri?[trackUri]:[]});}export default Player;","map":{"version":3,"sources":["/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/Player.js"],"names":["React","useState","useEffect","SpotifyPlayer","Player","accessToken","trackUri","play","setPlay","state","isPlaying"],"mappings":"qIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,C,2CAEA,QAASC,CAAAA,MAAT,MAA2C,IAAzBC,CAAAA,WAAyB,MAAzBA,WAAyB,CAAZC,QAAY,MAAZA,QAAY,CACzC,cAAwBL,QAAQ,CAAC,KAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAEAN,SAAS,CAAC,iBAAMM,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAD,CAAsB,CAACF,QAAD,CAAtB,CAAT,CAEA,GAAI,CAACD,WAAL,CAAkB,MAAO,KAAP,CAClB,mBACE,KAAC,aAAD,EACE,KAAK,CAAEA,WADT,CAEE,YAAY,KAFd,CAGE,QAAQ,CAAE,kBAAAI,KAAK,CAAI,CACjB,GAAI,CAACA,KAAK,CAACC,SAAX,CAAsBF,OAAO,CAAC,KAAD,CAAP,CACvB,CALH,CAME,IAAI,CAAED,IANR,CAOE,IAAI,CAAED,QAAQ,CAAG,CAACA,QAAD,CAAH,CAAgB,EAPhC,EADF,CAUD,CAED,cAAeF,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nfunction Player({ accessToken, trackUri }) {\n  const [play, setPlay] = useState(false);\n\n  useEffect(() => setPlay(true), [trackUri]);\n\n  if (!accessToken) return null;\n  return (\n    <SpotifyPlayer\n      token={accessToken}\n      showSaveIcon\n      callback={state => {\n        if (!state.isPlaying) setPlay(false)\n      }}\n      play={play}\n      uris={trackUri ? [trackUri] : []} />\n  )\n}\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}