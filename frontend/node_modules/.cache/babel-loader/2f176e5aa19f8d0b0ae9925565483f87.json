{"ast":null,"code":"import React,{useState,useContext}from'react';import Alert from'../alerts/Alert';import MusicMatchApi from'../api/api';import UserContext from'./UserContext';import{jsx as _jsx}from\"react/jsx-runtime\";function ProfileForm(){// const { currentUser, setCurrentUser } = useContext(UserContext);\n// const [formData, setFormData] = useState({\n//   firstName: currentUser.firstName,\n//   lastName: currentUser.lastName,\n//   email: currentUser.email,\n//   username: currentUser.username,\n//   password: ''\n// });\n// const [formErrors, setFormErrors] = useState([]);\n// const [saveConfirmed, setSaveConfirmed] = useState(false);\n// async function handleSubmit(evt) {\n//   evt.preventDefault();\n//   let profileData = {\n//     firstName: formData.firstName,\n//     lastName: formData.lastName,\n//     email: formData.email,\n//     password: formData.password\n//   };\n//   let username = formData.username;\n//   let updatedUser;\n//   try {\n//     updatedUser = await MusicMatchApi.saveProfile(username, profileData);\n//   } catch (errors) {\n//     setFormErrors(errors);\n//     return;\n//   }\n//   setFormData((form) => ({ ...form, password: '' }));\n//   setFormErrors([]);\n//   setSaveConfirmed(true);\n//   setCurrentUser(updatedUser);\n// }\n// function handleChange(evt) {\n//   const { name, value } = evt.target;\n//   setFormData((form) => ({\n//     ...form,\n//     [name]: value\n//   }));\n//   setFormErrors([]);\n// }\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"profile-form\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Page under construction due to JWT issues..\"})})// <div>\n//   <h3>User Profile</h3>\n//   <div>\n//     <form>\n//       <div>\n//         <label>Username</label>\n//         <p>{formData.username}</p>\n//       </div>\n//       <div>\n//         <label>First Name</label>\n//         <input name=\"firstName\" value={formData.firstName} onChange={handleChange} />\n//       </div>\n//       <div>\n//         <label>Last Name</label>\n//         <input name=\"lastName\" value={formData.lastName} onChange={handleChange} />\n//       </div>\n//       <div>\n//         <label>Email</label>\n//         <input name=\"email\" value={formData.email} onChange={handleChange} />\n//       </div>\n//       <div>\n//         <label>Re-enter password to make changes:</label>\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//         />\n//       </div>\n//       {formErrors.length ? <Alert type=\"danger\" messages={formErrors} /> : null}\n//       {saveConfirmed ? <Alert type=\"success\" message={['Update successful.']} /> : null}\n//       <button onClick={handleSubmit}>Save Changes</button>\n//     </form>\n//   </div>\n// </div>\n;}export default ProfileForm;","map":{"version":3,"sources":["/Users/davidbroida/Desktop/MusicMatch2/frontend/src/auth/ProfileForm.js"],"names":["React","useState","useContext","Alert","MusicMatchApi","UserContext","ProfileForm"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,YAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,2CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBAEE,YAAK,SAAS,CAAC,cAAf,uBACE,mEADF,EAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAxCF,CA0CD,CAED,cAAeA,CAAAA,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Alert from '../alerts/Alert';\nimport MusicMatchApi from '../api/api';\nimport UserContext from './UserContext';\n\nfunction ProfileForm() {\n  // const { currentUser, setCurrentUser } = useContext(UserContext);\n  // const [formData, setFormData] = useState({\n  //   firstName: currentUser.firstName,\n  //   lastName: currentUser.lastName,\n  //   email: currentUser.email,\n  //   username: currentUser.username,\n  //   password: ''\n  // });\n  // const [formErrors, setFormErrors] = useState([]);\n  // const [saveConfirmed, setSaveConfirmed] = useState(false);\n\n  // async function handleSubmit(evt) {\n  //   evt.preventDefault();\n\n  //   let profileData = {\n  //     firstName: formData.firstName,\n  //     lastName: formData.lastName,\n  //     email: formData.email,\n  //     password: formData.password\n  //   };\n\n  //   let username = formData.username;\n  //   let updatedUser;\n\n  //   try {\n  //     updatedUser = await MusicMatchApi.saveProfile(username, profileData);\n  //   } catch (errors) {\n  //     setFormErrors(errors);\n  //     return;\n  //   }\n\n  //   setFormData((form) => ({ ...form, password: '' }));\n  //   setFormErrors([]);\n  //   setSaveConfirmed(true);\n\n  //   setCurrentUser(updatedUser);\n  // }\n\n  // function handleChange(evt) {\n  //   const { name, value } = evt.target;\n  //   setFormData((form) => ({\n  //     ...form,\n  //     [name]: value\n  //   }));\n  //   setFormErrors([]);\n  // }\n\n  return (\n\n    <div className=\"profile-form\">\n      <h2>Page under construction due to JWT issues..</h2>\n    </div>\n    // <div>\n    //   <h3>User Profile</h3>\n    //   <div>\n    //     <form>\n    //       <div>\n    //         <label>Username</label>\n    //         <p>{formData.username}</p>\n    //       </div>\n    //       <div>\n    //         <label>First Name</label>\n    //         <input name=\"firstName\" value={formData.firstName} onChange={handleChange} />\n    //       </div>\n    //       <div>\n    //         <label>Last Name</label>\n    //         <input name=\"lastName\" value={formData.lastName} onChange={handleChange} />\n    //       </div>\n    //       <div>\n    //         <label>Email</label>\n    //         <input name=\"email\" value={formData.email} onChange={handleChange} />\n    //       </div>\n    //       <div>\n    //         <label>Re-enter password to make changes:</label>\n    //         <input\n    //           type=\"password\"\n    //           name=\"password\"\n    //           value={formData.password}\n    //           onChange={handleChange}\n    //         />\n    //       </div>\n    //       {formErrors.length ? <Alert type=\"danger\" messages={formErrors} /> : null}\n\n    //       {saveConfirmed ? <Alert type=\"success\" message={['Update successful.']} /> : null}\n    //       <button onClick={handleSubmit}>Save Changes</button>\n    //     </form>\n    //   </div>\n    // </div>\n  );\n}\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}