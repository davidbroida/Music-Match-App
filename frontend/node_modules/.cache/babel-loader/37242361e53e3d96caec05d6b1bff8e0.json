{"ast":null,"code":"var _jsxFileName = \"/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/SearchPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Song from './Song';\nimport Player from './Player';\nimport axios from 'axios';\nimport Dashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WelcomePage() {\n  var _s = $RefreshSig$();\n\n  const AUTH_URL = \"https://accounts.spotify.com/authorize?client_id=04306bc8614e44bbb0f6f8071bb81e01&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\";\n  const code = new URLSearchParams(window.location.search).get('code');\n  const SpotifyApi = new SpotifyWebApi({\n    clientId: '04306bc8614e44bbb0f6f8071bb81e01'\n  });\n\n  function SearchPage(_ref) {\n    _s();\n\n    let {\n      code\n    } = _ref;\n    const accessToken = useAuth(code);\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [playingSong, setPlayingSong] = useState();\n    const [lyrics, setLyrics] = useState('');\n\n    function chooseSong(song) {\n      setPlayingSong(song);\n      setSearch('');\n      setLyrics('');\n    }\n\n    useEffect(() => {\n      if (!playingSong) return;\n      axios.get('http://localhost:3001/lyrics', {\n        params: {\n          track: playingSong.title,\n          artist: playingSong.artist\n        }\n      }).then(res => {\n        setLyrics(res.data.lyrics);\n      });\n    }, [playingSong]);\n    useEffect(() => {\n      if (!accessToken) return;\n      SpotifyApi.setAccessToken(accessToken);\n    }, [accessToken]);\n    useEffect(() => {\n      if (!search) return setSearchResults([]);\n      if (!accessToken) return;\n      SpotifyApi.searchTracks(search).then(res => {\n        console.log(res.body);\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.album.images[0]);\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url\n          };\n        }));\n      });\n    }, [search, accessToken]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-page-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Search your favorite music...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"d-flex flex-column py-2\",\n        style: {\n          height: \"100vh\",\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"search\",\n          placeholder: \"Enter a song/ artist...\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 my-2\",\n          style: {\n            overflowY: \"auto\"\n          },\n          children: [searchResults.map(song => /*#__PURE__*/_jsxDEV(Song, {\n            song: song,\n            chooseSong: chooseSong\n          }, song.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            style: {\n              whiteSpace: \"pre\"\n            },\n            children: lyrics\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Player, {\n            accessToken: accessToken,\n            trackUri: playingSong === null || playingSong === void 0 ? void 0 : playingSong.uri\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(SearchPage, \"vOWnT3rach0so4H1e5KOrWJxpEc=\", false, function () {\n    return [useAuth];\n  });\n}\n\n_c = WelcomePage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WelcomePage\");","map":{"version":3,"sources":["/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/SearchPage.js"],"names":["React","useState","useEffect","useAuth","Container","Form","SpotifyWebApi","Song","Player","axios","Dashboard","WelcomePage","AUTH_URL","code","URLSearchParams","window","location","search","get","SpotifyApi","clientId","SearchPage","accessToken","setSearch","searchResults","setSearchResults","playingSong","setPlayingSong","lyrics","setLyrics","chooseSong","song","params","track","title","artist","then","res","data","setAccessToken","searchTracks","console","log","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","marginTop","e","target","value","overflowY","length","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Song from './Song';\nimport Player from './Player';\nimport axios from 'axios';\nimport Dashboard from './Dashboard';\n\nfunction WelcomePage() {\n  const AUTH_URL = \"https://accounts.spotify.com/authorize?client_id=04306bc8614e44bbb0f6f8071bb81e01&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\";\n\n  const code = new URLSearchParams(window.location.search).get('code');\n\n  const SpotifyApi = new SpotifyWebApi({\n    clientId: '04306bc8614e44bbb0f6f8071bb81e01'\n  })\n\n  function SearchPage({ code }) {\n    const accessToken = useAuth(code);\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [playingSong, setPlayingSong] = useState();\n    const [lyrics, setLyrics] = useState('');\n\n\n    function chooseSong(song) {\n      setPlayingSong(song);\n      setSearch('');\n      setLyrics('');\n    }\n\n    useEffect(() => {\n      if (!playingSong) return\n\n      axios.get('http://localhost:3001/lyrics', {\n        params: {\n          track: playingSong.title,\n          artist: playingSong.artist,\n        }\n      }).then(res => {\n        setLyrics(res.data.lyrics);\n      })\n    }, [playingSong])\n\n    useEffect(() => {\n      if (!accessToken) return;\n      SpotifyApi.setAccessToken(accessToken)\n    }, [accessToken]);\n\n    useEffect(() => {\n      if (!search) return setSearchResults([])\n      if (!accessToken) return;\n\n      SpotifyApi.searchTracks(search).then(res => {\n\n        console.log(res.body);\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image\n            return smallest\n          }, track.album.images[0])\n\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url\n          }\n        }))\n      })\n    }, [search, accessToken])\n\n\n\n    return (\n      <div>\n        <div className=\"search-page-title\">\n          <h4>Search your favorite music...</h4>\n        </div>\n        <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\", marginTop: '20px' }} >\n          <Form.Control type=\"search\" placeholder=\"Enter a song/ artist...\" value={search} onChange={e => setSearch(e.target.value)} />\n          <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n            {searchResults.map(song => (\n              < Song song={song} key={song.uri} chooseSong={chooseSong} />\n            ))}\n\n            {searchResults.length === 0 && (\n              <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n                {lyrics}\n              </div>\n            )}\n          </div>\n          <div>\n            <Player accessToken={accessToken} trackUri={playingSong?.uri} />\n          </div>\n        </Container >\n      </div>\n    )\n\n  }\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}