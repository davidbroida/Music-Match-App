{"ast":null,"code":"var _jsxFileName = \"/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Song from './Song';\nimport Player from './Player';\nimport axios from 'axios';\nimport Dashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTH_URL = \"https://accounts.spotify.com/authorize?client_id=04306bc8614e44bbb0f6f8071bb81e01&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\";\nconst code = new URLSearchParams(window.location.search).get('code'); // const code = localStorage.getItem('accessCode');\n\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01'\n});\n\nfunction SearchPage(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingSong, setPlayingSong] = useState();\n  const [lyrics, setLyrics] = useState('');\n\n  function chooseSong(song) {\n    setPlayingSong(song);\n    setSearch('');\n    setLyrics('');\n  }\n\n  useEffect(() => {\n    if (!playingSong) return;\n    axios.get('http://localhost:3001/lyrics', {\n      params: {\n        track: playingSong.title,\n        artist: playingSong.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingSong]);\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    SpotifyApi.searchTracks(search).then(res => {\n      console.log(res.body);\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-page-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Search your favorite music...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-column py-2\",\n      style: {\n        height: \"100vh\",\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"search\",\n        placeholder: \"Enter a song/ artist...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 my-2\",\n        style: {\n          overflowY: \"auto\"\n        },\n        children: [searchResults.map(song => /*#__PURE__*/_jsxDEV(Song, {\n          song: song,\n          chooseSong: chooseSong\n        }, song.uri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            whiteSpace: \"pre\"\n          },\n          children: lyrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [code, /*#__PURE__*/_jsxDEV(Player, {\n          accessToken: accessToken,\n          trackUri: playingSong === null || playingSong === void 0 ? void 0 : playingSong.uri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"vOWnT3rach0so4H1e5KOrWJxpEc=\", false, function () {\n  return [useAuth];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/davidbroida/Desktop/MusicMatch2/frontend/src/components/SearchPage.js"],"names":["React","useState","useEffect","useAuth","Container","Form","SpotifyWebApi","Song","Player","axios","Dashboard","AUTH_URL","code","URLSearchParams","window","location","search","get","SpotifyApi","clientId","SearchPage","accessToken","setSearch","searchResults","setSearchResults","playingSong","setPlayingSong","lyrics","setLyrics","chooseSong","song","params","track","title","artist","then","res","data","setAccessToken","searchTracks","console","log","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","marginTop","e","target","value","overflowY","length","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useAuth from '../useAuth';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport Song from './Song';\nimport Player from './Player';\nimport axios from 'axios';\nimport Dashboard from './Dashboard';\n\nconst AUTH_URL = \"https://accounts.spotify.com/authorize?client_id=04306bc8614e44bbb0f6f8071bb81e01&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\";\n\nconst code = new URLSearchParams(window.location.search).get('code');\n\n// const code = localStorage.getItem('accessCode');\n\nconst SpotifyApi = new SpotifyWebApi({\n  clientId: '04306bc8614e44bbb0f6f8071bb81e01'\n})\n\n\nfunction SearchPage({ code }) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingSong, setPlayingSong] = useState();\n  const [lyrics, setLyrics] = useState('');\n\n\n  function chooseSong(song) {\n    setPlayingSong(song);\n    setSearch('');\n    setLyrics('');\n  }\n\n  useEffect(() => {\n    if (!playingSong) return\n\n    axios.get('http://localhost:3001/lyrics', {\n      params: {\n        track: playingSong.title,\n        artist: playingSong.artist,\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    })\n  }, [playingSong])\n\n  useEffect(() => {\n    if (!accessToken) return;\n    SpotifyApi.setAccessToken(accessToken)\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!search) return setSearchResults([])\n    if (!accessToken) return;\n\n    SpotifyApi.searchTracks(search).then(res => {\n\n      console.log(res.body);\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image\n          return smallest\n        }, track.album.images[0])\n\n\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        }\n      }))\n    })\n  }, [search, accessToken])\n\n\n\n  return (\n    <div>\n      <div className=\"search-page-title\">\n        <h4>Search your favorite music...</h4>\n      </div>\n      <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\", marginTop: '20px' }} >\n        <Form.Control type=\"search\" placeholder=\"Enter a song/ artist...\" value={search} onChange={e => setSearch(e.target.value)} />\n        <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n          {searchResults.map(song => (\n            < Song song={song} key={song.uri} chooseSong={chooseSong} />\n          ))}\n\n          {searchResults.length === 0 && (\n            <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n              {lyrics}\n            </div>\n          )}\n        </div>\n        <div>\n          {code}\n          <Player accessToken={accessToken} trackUri={playingSong?.uri} />\n        </div>\n      </Container >\n    </div>\n  )\n\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}